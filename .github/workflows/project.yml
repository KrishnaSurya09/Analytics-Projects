name: DBT model

on:
  push:
    branches: [main]
    paths:
      - "Ecommerce_data/**/*.sql"
      - "Ecommerce_data/**/*.psql"
      - ".github/workflows/project.yml"
      - "dbt_project.yml"
      - "profiles/profiles.yml"
  workflow_dispatch: {}

jobs:
  run-new-sql:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      # used by dbt profiles.yml -> {{ env_var('DB_PASSWORD') }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DBT_PROFILES_DIR: profiles

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Execute only new or modified SQL files (plain psql)
        env:
          PGHOST: analytics-analytics-6e35.d.aivencloud.com
          PGPORT: "27742"
          PGDATABASE: defaultdb
          PGUSER: ci_migrator
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
          PGSSLMODE: require
        shell: bash
        run: |
          set -euo pipefail

          mapfile -t files < <(
            git diff --name-only origin/main...HEAD \
              -- 'Ecommerce_data/**/*.sql' 'Ecommerce_data/**/*.psql' \
            | grep -v '^$' || true
          )

          if [ ${#files[@]} -eq 0 ]; then
            echo "No new or updated SQL files found."
          else
            echo "Running new or updated SQL files:"
            printf '  %s\n' "${files[@]}"
            for f in "${files[@]}"; do
              if [ -f "$f" ]; then
                echo "=== Executing $f ==="
                # -1 = single-transaction
                psql -v ON_ERROR_STOP=1 -1 -f "$f"
              fi
            done
          fi

      # ---------- dbt section ----------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dbt-postgres
        run: |
          python -m pip install --upgrade pip
          pip install dbt-postgres

      - name: dbt debug (check connection)
        run: dbt debug --no-use-colors

      # ---------- simple sanity check ----------
      - name: Verify connection
        env:
          PGHOST: analytics-analytics-6e35.d.aivencloud.com
          PGPORT: "27742"
          PGDATABASE: defaultdb
          PGUSER: ci_migrator
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
          PGSSLMODE: require
        run: |
          psql -v ON_ERROR_STOP=1 -c "SELECT 'Workflow executed successfully' AS status, NOW() AS executed_at;"